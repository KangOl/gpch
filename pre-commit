#!/usr/bin/env bash
set -o pipefail

if [[ $(uname) = 'Darwin' ]]; then
    # no readlink -f on osx :(
    rl=$(python -c 'import os,sys;print os.path.realpath(sys.argv[1])' "$0")
else
    rl=$(readlink -f "$0")
fi

readonly HERE=$(dirname "$rl")


warn() {
    if [[ -t 2 ]]; then
        echo -n -e '\033[1;33mWARN\033[0m ' >&2
    else
        echo -n 'WARN ' >&2
    fi
    echo "$@" >&2
}
error() {
    if [[ -t 2 ]]; then
        echo -n -e '\033[1;31mERROR\033[0m ' >&2
    else
        echo -n 'ERROR ' >&2
    fi
    echo "$@" >&2
    exit 1
}


if git rev-parse --verify HEAD >/dev/null 2>&1
then
    against=HEAD
else
    # Initial commit: diff against an empty tree object
    against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

# builtin trailing spaces and conflits markers check
git diff-index --check --cached $against -- >&2
if [[ $? -ne 0 ]]; then
    error "git diff --check failed"
fi

diff=$(git diff -z --cached --diff-filter=ACM $against)

debugger=$(echo "$diff" | egrep -c '^\+.*(debugger|set_trace|pu\.db)')
if [[ $debugger -gt 0 ]]; then
    error "debugging keyword found"
fi

# check with flake8
if [[ -n "$(command -v flake8)" ]]; then
    output=cat
    if [[ -t 2 ]]; then
        # fd 2 is terminal => colored output
        colout=$(command -v colout)
        if [[ -n "$colout" ]]; then
            output="$colout -T $HERE -t flake8"
        fi
    fi

    echo "$diff" | flake8 --diff -j1 | $output >&2
else
    warn "flake8 not found"
fi
